// <auto-generated />
using System;
using Argus.Coordinator.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Argus.Coordinator.Migrations
{
    [DbContext(typeof(CoordinatorContext))]
    [Migration("20210909150752_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Argus.Coordinator.Model.ServiceState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("ResumePoint")
                        .HasColumnType("text")
                        .HasColumnName("resume_point");

                    b.HasKey("Id")
                        .HasName("pk_service_states");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_service_states_id");

                    b.ToTable("service_states");
                });

            modelBuilder.Entity("Argus.Coordinator.Model.ServiceStatusReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.HasKey("Id")
                        .HasName("pk_service_status_reports");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_service_status_reports_id");

                    b.ToTable("service_status_reports");
                });

            modelBuilder.Entity("Argus.Coordinator.Model.ServiceStatusReport", b =>
                {
                    b.OwnsOne("Argus.Common.Messages.BulkData.StatusReport", "Report", b1 =>
                        {
                            b1.Property<int>("ServiceStatusReportId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasColumnName("id")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<string>("Link")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("report_image");

                            b1.Property<string>("Message")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("report_message");

                            b1.Property<string>("ServiceName")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("report_service_name");

                            b1.Property<string>("Source")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("report_source");

                            b1.Property<int>("Status")
                                .HasColumnType("integer")
                                .HasColumnName("report_status");

                            b1.Property<DateTime>("Timestamp")
                                .HasColumnType("timestamp without time zone")
                                .HasColumnName("report_timestamp");

                            b1.HasKey("ServiceStatusReportId")
                                .HasName("pk_service_status_reports");

                            b1.ToTable("service_status_reports");

                            b1.WithOwner()
                                .HasForeignKey("ServiceStatusReportId")
                                .HasConstraintName("fk_service_status_reports_service_status_reports_id");
                        });

                    b.Navigation("Report")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
